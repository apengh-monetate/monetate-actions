{
  "id": 381214,
  "title": "HTML Video Lightbox",
  "description": "HTML Video Lightbox",
  "op": "allInOneLightboxString",
  "slot": "actionbuilder_ag_0",
  "slot_type": "none",
  "category": "lightbox",
  "subcategory": "Category page",
  "action_events": [
    "op_impression"
  ],
  "inputs": [
    {
      "input": {
        "type": "str",
        "name": "htmlString",
        "value": "<section class=\"mt-lightbox\"><button class=\"mt-lightbox__close\" tabindex=\"0\">&times;</button>\n<div class=\"mt-lightbox__video\"><iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" frameborder=\"0\" height=\"315\" id=\"ytplayer\" src=\"https://www.youtube.com/embed/MBWLwAEX4Wg?autoplay=1&amp;controls=0&amp;loop=1&amp;modestbranding=1&amp;playsinline=1&amp;rel=0&amp;showinfo=0&amp;enablejsapi=1\" width=\"560\"></iframe></div>\n</section>\n"
      },
      "widget": {
        "label": "HTML String",
        "type": "HtmlField",
        "description": "HTML to be inserted.  Close buttons classes should correspond to the optional 'Close Button Class' input or use the default class of 'lightboxClose'.  You may also use a link with an href of '#close'.",
        "action_visible": true
      },
      "required": true
    },
    {
      "input": {
        "type": "int",
        "name": "lightboxWidth",
        "value": 560
      },
      "widget": {
        "label": "Lightbox Width",
        "type": "IntegerField",
        "description": "Width of the lightbox (in pixels). If you set to zero, the width will be calculated automatically.",
        "action_visible": true
      },
      "required": true
    },
    {
      "input": {
        "type": "int",
        "name": "lightboxHeight",
        "value": 315
      },
      "widget": {
        "label": "Lightbox Height",
        "type": "IntegerField",
        "description": "Height of the lightbox (in pixels).  If you set to zero, the height will be calculated automatically.",
        "action_visible": true
      },
      "required": true
    },
    {
      "input": {
        "type": "int",
        "name": "lightboxId",
        "value": 0
      },
      "widget": {
        "label": "Lightbox ID",
        "type": "IntegerField",
        "description": "This ID can be any number between zero and 31, and determines the grouping of this lightbox to differentiate it from other lightboxes.",
        "action_visible": true
      },
      "required": true
    },
    {
      "input": {
        "type": "str",
        "name": "showInterval",
        "value": "page"
      },
      "widget": {
        "label": "Display Frequency",
        "options": [
          {
            "name": "page",
            "label": "Every page"
          },
          {
            "name": "session",
            "label": "Once per session"
          },
          {
            "name": "once",
            "label": "Once, ever"
          },
          {
            "name": "custominterval",
            "label": "Once every 'X' days"
          }
        ],
        "type": "StringSelectField",
        "description": "How often (per user) should this lightbox be shown? Based on lightbox ID.",
        "action_visible": true
      },
      "required": true
    },
    {
      "input": {
        "type": "flexible_creative",
        "name": "opt_js",
        "value": {
          "content": "(function() {\n\n    // Get all lightboxes\n    var lightboxes = document.querySelectorAll('#monetate_lightbox');\n\n    // Loop through them, see if it has our .mt-lightbox__video element\n    for(var i = 0; i < lightboxes.length; i++) {\n        if(lightboxes[i].querySelector('.mt-lightbox__video')) {\n            var videoLightbox = lightboxes[i];\n        }\n    }\n\n    var close = videoLightbox.querySelector('.mt-lightbox__close');\n    var mask = videoLightbox.querySelector('#monetate_lightbox_mask');\n    var video = videoLightbox.querySelector('#ytplayer');\n\n    function stopVideo(element) {\n        console.log('STOP PLAYBACK');\n        element.src = '';\n    }\n\n    // On close click, stop video\n    if(close) {\n        close.addEventListener('click', function() {\n            console.log('CLOSE CLICK');\n            stopVideo(video);\n        });\n    }\n\n    // On mouse click, sotp video\n    if(mask) {\n        mask.addEventListener('click', function() {\n            console.log('MASK CLICK');\n            stopVideo(video);\n        });\n    }\n\n})();\n",
          "discriminator": "content",
          "ref": null,
          "type": "javascript"
        }
      },
      "widget": {
        "label": "Script",
        "type": "JavaScriptCodeField",
        "description": "Please enter valid JavaScript. Note that changes you make to existing JavaScript creatives will not be saved for use in other actions.",
        "action_visible": true
      },
      "required": false
    },
    {
      "input": {
        "type": "flexible_creative",
        "name": "opt_styleSheet",
        "value": {
          "content": ".mt-lightbox {\n  align-content: center;\n  align-items: center;\n  background: #fff;\n  border: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  left: 50%;\n  min-width: 320px;\n  padding: 0;\n  position: fixed;\n  text-align: center;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: auto;\n  z-index: 9999;\n}\n\n@media screen and (min-width: 768px) {\n  .mt-lightbox {\n    min-width: 640px;\n  }\n}\n\n@media screen and (min-width: 1024px) {\n  .mt-lightbox {\n    min-width: 800px;\n  }\n}\n\n.mt-lightbox__close {\n  align-content: center;\n  align-items: center;\n  background: transparent;\n  border: none;\n  color: #fff;\n  display: inline-flex;\n  font-size: 32px;\n  font-weight: 100;\n  height: 32px;\n  justify-content: center;\n  line-height: 20px;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 0;\n  top: -36px;\n  width: 32px;\n  z-index: 1;\n}\n\n@media screen and (min-width: 800px) {\n  .mt-lightbox__close {\n    right: -6px;\n  }\n}\n\n.mt-lightbox__video {\n  overflow: hidden;\n  padding-bottom: 56.25%;\n  position: relative;\n  width: 100%;\n}\n\n.mt-lightbox__video iframe {\n  border: 0;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n",
          "discriminator": "content",
          "ref": null,
          "type": "css"
        }
      },
      "widget": {
        "label": "CSS",
        "type": "CSSCodeField",
        "description": "CSS appended to the DOM in a <style> or <link> element.",
        "action_visible": true
      },
      "required": false
    },
    {
      "input": {
        "type": "str",
        "name": "opt_closeButtonClass",
        "value": "mt-lightbox__close"
      },
      "widget": {
        "label": "Close Button Class",
        "type": "CharField",
        "description": "All elements in the HTML creative with this class will act as a close button for the lightbox.",
        "action_visible": true
      },
      "required": false
    },
    {
      "input": {
        "type": "int",
        "name": "opt_top",
        "value": null
      },
      "widget": {
        "label": "Top Position",
        "type": "IntegerField",
        "description": "The top offset of the lightbox (in pixels).",
        "action_visible": true
      },
      "required": false
    },
    {
      "input": {
        "type": "int",
        "name": "opt_left",
        "value": null
      },
      "widget": {
        "label": "Left Position",
        "type": "IntegerField",
        "description": "The left offset of the lightbox (in pixels).",
        "action_visible": true
      },
      "required": false
    },
    {
      "input": {
        "type": "bool",
        "name": "opt_pinned",
        "value": true
      },
      "widget": {
        "label": "Pin Lightbox Position?",
        "type": "BooleanField",
        "description": "Is the lightbox pinned to its position on screen, or does it scroll with the page?",
        "action_visible": true
      },
      "required": false
    },
    {
      "input": {
        "type": "str",
        "name": "opt_color",
        "value": null
      },
      "widget": {
        "label": "Overlay Color",
        "type": "CharField",
        "description": "Color of the lightbox overlay. Defaults to \"#000\".",
        "action_visible": true
      },
      "required": false
    },
    {
      "input": {
        "type": "float",
        "name": "opt_opacity",
        "value": null
      },
      "widget": {
        "label": "Overlay Opacity",
        "type": "FloatField",
        "description": "Opacity of the lightbox overlay. Defaults to '0.6'.",
        "action_visible": true
      },
      "required": false
    },
    {
      "input": {
        "type": "bool",
        "name": "opt_closeable",
        "value": true
      },
      "widget": {
        "label": "Click Overlay to Close?",
        "type": "BooleanField",
        "description": "Is the lightbox closeable by clicking on the overlay?",
        "action_visible": true
      },
      "required": false
    },
    {
      "input": {
        "type": "int",
        "name": "opt_customInterval",
        "value": null
      },
      "widget": {
        "label": "Days until expiration",
        "type": "IntegerField",
        "description": "Days until the lightbox expires. Only to be used when 'Once every 'X' days' is selected from the frequency.",
        "action_visible": true
      },
      "required": false
    },
    {
      "input": {
        "type": "int",
        "name": "opt_openDelay",
        "value": null
      },
      "widget": {
        "label": "Delay Open (in seconds)",
        "type": "IntegerField",
        "description": "Number of seconds before the lightbox should open.",
        "action_visible": true
      },
      "required": false
    },
    {
      "input": {
        "type": "bool",
        "name": "opt_animate",
        "value": true
      },
      "widget": {
        "label": "Animate open/close?",
        "type": "BooleanField",
        "description": "Should the lightbox animate when opening/closing?",
        "action_visible": true
      },
      "required": false
    }
  ],
  "masks": [],
  "rule_operator": "and",
  "rules": {
    "builtin": [
      {
        "values": [
          "category"
        ],
        "id": 214657,
        "rule_tmpl": {
          "widget": "itemlist",
          "description": null,
          "is_included": true,
          "verb": "=",
          "label": "Page type",
          "rule_name": "page_type",
          "rule_op": "equal",
          "value_type": "string",
          "filter_name": "page_filter"
        }
      }
    ],
    "required": []
  },
  "manage_impressions": false
}
